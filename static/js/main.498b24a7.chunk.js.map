{"version":3,"sources":["components/GifExample/index.jsx","components/CssAnimationExample/index.jsx","components/JsAnimationExample/index.jsx","components/Examples/index.jsx","pages/CycleBlockingDemo/index.jsx","components/FileInput/index.js","pages/BlockingImageDemo/index.js","pages/NonblockingImageDemo/index.js","App.jsx","serviceWorker.js","index.js"],"names":["GifExample","react_default","a","createElement","src","alt","CssAnimationExample","className","role","aria-label","JsAnimationExample","_this","this","box","deg","rafId","requestAnimationFrame","animate","style","transform","concat","window","cancelAnimationFrame","_this2","ref","node","Component","Examples","components_GifExample","src_components_CssAnimationExample","src_components_JsAnimationExample","SECOND","CycleBlockingDemo","handleClick","startingTime","Number","Date","react","src_components_Examples","onClick","FileInput","type","name","accept","input","onChange","props","MAX_CANVAS_WIDTH","MAX_CANVAS_HEIGHT","BlockingImageDemo","handleInputChange","event","firstFile","target","files","reader","FileReader","canvas","img","document","onload","ctx","getContext","drawImage","width","height","loadEvent","result","readAsDataURL","value","components_FileInput","NonblockingImageDemo","worker","postMessage","file","id","blob","URL","createObjectURL","Worker","onmessage","data","_this3","App","react_router_dom","to","react_router","path","exact","component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.498b24a7.chunk.js","sourcesContent":["import React from \"react\";\n\nconst GifExample = () => (\n    <section>\n        <h2> Gif –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ </h2> <img src=\"image.gif\" alt=\"crazy cat\" />\n    </section>\n);\n\nexport default GifExample;\n","import React from \"react\";\n\nimport \"./index.css\";\n\nconst CssAnimationExample = () => (\n    <section className=\"css-animation-example\">\n        <h2>CSS –∞–Ω–∏–º–∞—Ü–∏—è</h2>\n        <h3><code>transform: translateX(<strong>X</strong>);</code></h3>\n        <span\n            role=\"img\"\n            aria-label=\"cat\"\n            className=\"css-animation-example__box\">\n            üêà\n        </span>\n        <h3><code>position: relative; left: <strong>X</strong>;</code></h3>\n        <span\n            role=\"img\"\n            aria-label=\"cat\"\n            className=\"css-animation-example__box css-animation-example__box--position\">\n            üêà\n        </span>\n    </section>\n);\n\nexport default CssAnimationExample;\n","import React, { Component } from \"react\";\n\nimport \"./index.css\";\n\nclass JsAnimationExample extends Component {\n    componentDidMount() {\n        if (this.box) {\n            let deg = 0;\n            const animate = () => {\n                deg = (deg + 1) % 360;\n                this.box.style.transform = `rotate(${deg}deg)`;\n                this.rafId = requestAnimationFrame(animate);\n            };\n            this.rafId = requestAnimationFrame(animate);\n        }\n    }\n\n    componentWillUnmount() {\n        window.cancelAnimationFrame(this.rafId);\n    }\n\n    render() {\n        return (\n            <section>\n                <h2> JS –∞–Ω–∏–º–∞—Ü–∏—è </h2>\n                <h3><code>requestAnimationFrame</code></h3>\n                <span\n                    role=\"img\"\n                    aria-label=\"cat\"\n                    className=\"js-animation-example__box\"\n                    ref={node => {\n                        this.box = node;\n                    }}>\n                    ü¶î\n                </span>\n            </section>\n        );\n    }\n}\n\nexport default JsAnimationExample;\n","import React from \"react\";\n\nimport \"./index.css\";\n\nimport GifExample from \"../GifExample\";\nimport CssAnimationExample from \"../CssAnimationExample\";\nimport JsAnimationExample from \"../JsAnimationExample\";\n\nconst Examples = () => (\n    <div className=\"examples\">\n        <GifExample />\n        <CssAnimationExample />\n        <JsAnimationExample />\n    </div>\n);\n\nexport default Examples;\n","import React, { Component, Fragment } from \"react\";\n\nimport Examples from \"../../components/Examples\";\n\nconst SECOND = 1000;\n\nclass CycleBlockingDemo extends Component {\n    handleClick = () => {\n        const startingTime = Number(new Date());\n\n        while (true) {\n            const timeNow = Number(new Date());\n\n            if (timeNow - startingTime > 5 * SECOND) break;\n        }\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <h1>–î–µ–º–æ –±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ—Ç–æ–∫–∞</h1>\n                <Examples />\n                <button onClick={this.handleClick}>\n                    –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Ç–æ–∫ –Ω–∞ 5 —Å–µ–∫—É–Ω–¥\n                </button>\n            </Fragment>\n        );\n    }\n}\n\nexport default CycleBlockingDemo;\n","import React, {Component} from 'react';\n\nclass FileInput extends Component {\n    render() {\n        return (\n            <input\n                type=\"file\"\n                name=\"file\"\n                accept=\"image/*\"\n                ref={node => { this.input = node; }}\n                onChange={this.props.onChange}\n            />\n        )\n    }\n}\n\nexport default FileInput\n","import React, { Component, Fragment } from \"react\";\n\nimport \"./index.css\";\n\nimport Examples from \"../../components/Examples\";\nimport FileInput from '../../components/FileInput';\n\nconst MAX_CANVAS_WIDTH = 480;\nconst MAX_CANVAS_HEIGHT = 320;\n\nclass BlockingImageDemo extends Component {\n    handleInputChange = (event) => {\n        const {files} = event.target;\n        const firstFile = files[0];\n\n        if (!firstFile) return;\n\n        const reader = new FileReader();\n        const canvas = this.canvas;\n        const img = document.createElement('img');\n\n        img.onload = () => {\n            let ctx = canvas.getContext('2d');\n            ctx.drawImage(img, 0, 0);\n\n            let {width, height} = img;\n\n            // –µ—Å–ª–∏ –∫–∞—Ä—Ç–∏–Ω–∫–∞ –±–æ–ª—å—à–µ –∑–∞–¥–∞–Ω–Ω—ã—Ö –∫–æ–Ω—Å—Ç–∞–Ω—Ç, —Ç–æ –∏–∑–º–µ–Ω—è–µ–º –µ—ë —Ä–∞–∑–º–µ—Ä\n            if (width > height && width > MAX_CANVAS_WIDTH) {\n                height *= MAX_CANVAS_WIDTH / width;\n                width = MAX_CANVAS_WIDTH;\n            } else if (height > MAX_CANVAS_HEIGHT) {\n                width *= MAX_CANVAS_HEIGHT / height;\n                height = MAX_CANVAS_HEIGHT;\n            }\n\n            canvas.width = width;\n            canvas.height = height;\n\n            ctx = canvas.getContext('2d');\n            ctx.drawImage(img, 0, 0, width, height);\n        };\n\n        reader.onload = loadEvent => {\n            img.src = loadEvent.target.result;\n        };\n        reader.readAsDataURL(firstFile);\n\n\n        if (this.input) {\n            this.input.value = '';\n        }\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <h1>–î–µ–º–æ –±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–æ–π —Ñ–æ—Ç–∫–∏</h1>\n                <div className=\"blocking-image-demo__layout\">\n                    <Examples />\n                    <canvas\n                        ref={node => {\n                            this.canvas = node;\n                        }}\n                    />\n                    </div>\n                <FileInput onChange={this.handleInputChange} />\n            </Fragment>\n        );\n    }\n}\n\nexport default BlockingImageDemo;\n","import React, { Component, Fragment } from \"react\";\n\nimport \"./index.css\";\n\nimport Examples from \"../../components/Examples\";\nimport FileInput from '../../components/FileInput';\n\nconst MAX_CANVAS_WIDTH = 480;\nconst MAX_CANVAS_HEIGHT = 320;\n\nclass NonblockingImageDemo extends Component {\n    handleInputChange = (event) => {\n        const { files } = event.target;\n        const firstFile = files[0];\n\n        if (!firstFile) return;\n\n        this.worker.postMessage({\n            file: firstFile,\n            id: 1,\n        });\n    };\n\n    drawImage = blob => {\n        const canvas = this.canvas;\n        const img = document.createElement(\"img\");\n\n        img.onload = () => {\n            let ctx = canvas.getContext(\"2d\");\n            ctx.drawImage(img, 0, 0);\n\n            let width = img.width;\n            let height = img.height;\n\n            // –µ—Å–ª–∏ –∫–∞—Ä—Ç–∏–Ω–∫–∞ –±–æ–ª—å—à–µ –∑–∞–¥–∞–Ω–Ω—ã—Ö –∫–æ–Ω—Å—Ç–∞–Ω—Ç, —Ç–æ –∏–∑–º–µ–Ω—è–µ–º –µ—ë —Ä–∞–∑–º–µ—Ä\n            if (width > height && width > MAX_CANVAS_WIDTH) {\n                height *= MAX_CANVAS_WIDTH / width;\n                width = MAX_CANVAS_WIDTH;\n            } else if (height > MAX_CANVAS_HEIGHT) {\n                width *= MAX_CANVAS_HEIGHT / height;\n                height = MAX_CANVAS_HEIGHT;\n            }\n\n            canvas.width = width;\n            canvas.height = height;\n            ctx = canvas.getContext(\"2d\");\n            ctx.drawImage(img, 0, 0, width, height);\n        };\n\n        img.src = URL.createObjectURL(blob);\n\n        if (this.input) {\n            this.input.value = \"\";\n        }\n    }\n\n    componentDidMount() {\n        this.worker = new Worker(\"imageWorker.js\");\n\n        this.worker.onmessage = event => {\n            this.drawImage(event.data);\n        };\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <h1>–î–µ–º–æ –≤–æ—Ä–∫–µ—Ä–∞</h1>\n                <div className=\"nonblocking-image-demo__layout\">\n                    <Examples />\n                    <canvas\n                        ref={node => {\n                            this.canvas = node;\n                        }}\n                    />\n                    </div>\n                <FileInput onChange={this.handleInputChange} />\n            </Fragment>\n        );\n    }\n}\n\nexport default NonblockingImageDemo;\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\n\nimport CycleBlockingDemo from \"./pages/CycleBlockingDemo\";\nimport BlockingImageDemo from \"./pages/BlockingImageDemo\";\nimport NonblockingImageDemo from './pages/NonblockingImageDemo';\n\nimport \"./App.css\";\n\nclass App extends Component {\n    render() {\n        return (\n            <Router>\n                <div>\n                    <nav>\n                        <ul>\n                            <li>\n                                <Link to=\"/demo-1\">–î–µ–º–æ 1</Link>\n                            </li>\n                            <li>\n                                <Link to=\"/demo-2\">–î–µ–º–æ 2</Link>\n                            </li>\n                            <li>\n                                <Link to=\"/demo-3\">–î–µ–º–æ 3</Link>\n                            </li>\n                        </ul>\n                    </nav>\n                    <main className=\"main\">\n                        <Route\n                            path=\"/demo-1\"\n                            exact\n                            component={CycleBlockingDemo}\n                        />\n                        <Route path=\"/demo-2\" component={BlockingImageDemo} />\n                        <Route path=\"/demo-3\" component={NonblockingImageDemo} />\n                    </main>\n                </div>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}